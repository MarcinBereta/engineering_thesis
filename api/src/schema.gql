# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SimpleModerator {
  id: String!
  userId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  categories: [String!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: String!
  username: String!
  email: String!
  password: String!
  createdAt: DateTime
  updatedAt: DateTime
  role: String!
  verified: Boolean!
  image: String
  Moderator: SimpleModerator
}

type simpleUser {
  id: String!
  email: String!
  username: String!
  image: String
  verified: Boolean!
  role: String!
}

type SignupResponse {
  access_token: String!
  refresh_token: String!
  expires: DateTime!
  user: simpleUser!
}

type VerificationFormData {
  id: String!
  userId: String!
  text: String!
  User: simpleUser!
}

type NullResponse {
  message: String
}

type CountDto {
  count: Float!
  size: Float!
}

type SigninResponse {
  access_token: String!
  refresh_token: String!
  expires: DateTime!
  user: simpleUser!
}

type SimpleCourse {
  id: String!
  name: String!
  summary: String
  category: String!
  tag: String
  creatorId: String
  language: String
}

type Course {
  id: String!
  name: String!
  summary: String
  category: String!
  tag: String
  creatorId: String
  language: String
  text: [CourseItem!]!
  courseId: String
}

type CourseCreator {
  username: String!
  email: String!
}

type ExtendedCourse {
  id: String!
  name: String!
  summary: String
  category: String!
  tag: String
  creatorId: String
  language: String
  text: [CourseItem!]!
  courseId: String
  creator: CourseCreator!
}

type CourseItem {
  id: String!
  type: String!
  value: String!
}

type Quiz {
  id: String!
  courseId: String!
  name: String!
  questions: [Question!]!
  UserScores: [UserScore!]!
  course: SimpleCourse
}

type Question {
  id: String!
  quizId: String!
  question: String!
  answers: [String!]!
  correct: [String!]!
  type: String!
}

type UserScore {
  userId: String!
  quizId: String!
  score: Float!
  noQuest: Float!
  createdAt: DateTime!
}

type UserScoreExtended {
  userId: String!
  quizId: String!
  score: Float!
  noQuest: Float!
  createdAt: DateTime!
  quizName: String!
}

type UniqueQuizzesPlayedDTO {
  MATH: Float!
  HISTORY: Float!
  GEOGRAPHY: Float!
  ENGLISH: Float!
  ART: Float!
  SPORTS: Float!
  SCIENCE: Float!
  MUSIC: Float!
  OTHER: Float!
}

type UserAchievement {
  userId: String!
  name: String!
  icon: String!
}

type Query {
  users: [User!]!
  getUsersWithPagination(pagination: PaginationDto!): [User!]!
  countUsersWithPagination(pagination: PaginationDto!): CountDto!
  getUserFriends: [User!]!
  getUserFriendRequests: [User!]!
  getAllUsers: [User!]!
  refreshUserData: User!
  getVerifyRequests: [VerificationFormData!]!
  course: [Course!]!
  dashboardCourses: [ExtendedCourse!]!
  unVerifiedCourses: [Course!]!
  getCoursesWithPagination(pagination: PaginationDto!): [Course!]!
  getMostFitCourse: [ExtendedCourse!]!
  countCoursesWithPagination(pagination: PaginationDto!): CountDto!
  MyCourses: [Course!]!
  getQuizById(id: String!): Quiz!
  getAllQuizzes: [Quiz!]!
  getDashboardQuizzes: [Quiz!]!
  getQuizzesWithPagination(pagination: PaginationDto!): [Quiz!]!
  getQuizzesByCourseId(courseId: String!): [Quiz!]!
  countQuizWithPagination(pagination: PaginationDto!): CountDto!
  getUserScore: [UserScoreExtended!]!
  getCreatedCourses: Float!
  getCreatedCoursesByUserId(userId: String!): Float!
  getAllUserGamesCount: Float!
  getAllUserGamesCountByUserId(userId: String!): Float!
  getMaxedQuizesCount: Float!
  getMaxedQuizesCountByUserId(userId: String!): Float!
  getFriendsCount: Float!
  getFriendsCountByUserId(userId: String!): Float!
  getNumberOfCourses: Float!
  getNumberOfCoursesByUserId(userId: String!): Float!
  percentOfCoursesByCategory(category: String!): Float!
  numberOfUniqueQuizzesPlayedByCategory: UniqueQuizzesPlayedDTO!
  numberOfUniqueQuizzesPlayedByCategoryByUserId(userId: String!): UniqueQuizzesPlayedDTO!
  getUserAchievements: [UserAchievement!]!
  getFriendAchievements(friendId: String!): [UserAchievement!]!
}

input PaginationDto {
  page: Float!
  search: String
  category: String
}

type Mutation {
  signup(registerUserInput: SingUpUserInput!): SignupResponse!
  providerLogin(providerUserInput: ProviderInput!): SigninResponse!
  signin(loginUserInput: SigninUserInput!): SigninResponse!
  refreshAuthToken(refreshToken: String!): SigninResponse!
  updateUser(UserEdit: UserEdit!): User!
  addVerificationForm(VerificationForm: VerificationForm!): User!
  verifyUser(VerifyUser: VerifyUser!): User!
  declineUserVerification(VerifyUser: VerifyUser!): User!
  addFriendRequest(friendName: String!): NullResponse!
  acceptFriendRequest(friendId: String!): NullResponse!
  declineFriendRequest(friendId: String!): NullResponse!
  removeFriend(friendId: String!): NullResponse!
  changeData(changeData: ChangeData!): NullResponse!
  addCourse(newCourse: CourseInput!): Course!
  editCourse(editCourse: EditCourseInput!): Course!
  verifyCourse(verifyCourse: VerifyCourseDto!): Course!
  declineCourse(verifyCourse: VerifyCourseDto!): Course!
  addUserScore(addScore: AddScore!): Quiz!
  RecreateQuiz(recreateQuiz: RecreateQuizDto!): Quiz!
  updateQuiz(updateQuiz: QuizUpdateDto!): Quiz!
  generateMoreQuizzes(generateMoreQuizzes: MoreQuizzesDTO!): [Quiz!]!
}

input SingUpUserInput {
  username: String!
  password: String!
  email: String!
}

input ProviderInput {
  email: String!
  username: String!
  image: String!
}

input SigninUserInput {
  username: String!
  password: String!
}

input UserEdit {
  id: String!
  role: String!
  verified: Boolean!
  categories: [String!]!
}

input VerificationForm {
  text: String!
}

input VerifyUser {
  requestId: String!
}

input ChangeData {
  userName: String!
  email: String!
}

input CourseInput {
  name: String!
  text: [CourseItemInput!]!
  category: String!
  language: String!
}

input CourseItemInput {
  id: String!
  type: String!
  value: String!
}

input EditCourseInput {
  name: String!
  category: String!
  text: [CourseItemInput!]!
  id: String!
  language: String
}

input VerifyCourseDto {
  courseId: String!
}

input AddScore {
  userId: String!
  quizId: String!
  score: Float!
}

input RecreateQuizDto {
  quizId: String!
  questionCount: Float!
  answerCount: Float!
  quizOptions: [String!]!
}

input QuizUpdateDto {
  id: String!
  questions: [QuestionUpdateDto!]!
}

input QuestionUpdateDto {
  id: String!
  quizId: String!
  question: String!
  answers: [String!]!
  correct: [String!]!
  type: String!
}

input MoreQuizzesDTO {
  courseId: String!
  quizOptions: [String!]!
}