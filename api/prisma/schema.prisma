// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(uuid())
  email           String       @unique
  username        String       @unique
  verified        Boolean      @default(false)
  role            Role         @default(USER)
  image           String?
  password        String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  courses         Course[]
  scores          UserScores[]
  Friends         Friends[]    @relation(name: "friends_users")
  Friends_request Friends[]    @relation(name: "friends_friends")
  VerificationForm        VerificationForm[]
  Moderator               Moderator[]
  FriendsRequests         FriendsRequests[]  @relation(name: "friends_requests_user")
  FriendsRequests_friends FriendsRequests[]  @relation(name: "friends_requests_friend")
}

model Course {
  id          String       @id @default(uuid())
  name        String
  creatorId   String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  verified    Boolean      @default(false)
  category    Category
  creator     User         @relation(fields: [creatorId], references: [id])
  text        CourseItem[]
  Quiz        Quiz[]
  moderator   Moderator    @relation(fields: [moderatorId], references: [id])
  moderatorId String
}

model CourseItem {
  id        String         @id @default(uuid())
  courseId  String
  type      CourseItemType
  value     String
  course    Course         @relation(fields: [courseId], references: [id])
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Quiz {
  id         String       @id @default(uuid())
  courseId   String
  name       String
  questions  Question[]
  UserScores UserScores[]
  course     Course       @relation(fields: [courseId], references: [id])
}

model Question {
  id       String   @id @default(uuid())
  quizId   String
  question String
  answers  String[]
  correct  String

  Quiz Quiz @relation(fields: [quizId], references: [id])
}

model UserScores {
  id        String   @id @default(uuid())
  userId    String
  quizId    String
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Quiz      Quiz     @relation(fields: [quizId], references: [id])
}

model Friends {
  id        String   @id @default(uuid())
  userId    String
  friendId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(name: "friends_users", fields: [userId], references: [id])
  Friend    User     @relation(name: "friends_friends", fields: [friendId], references: [id])
}

model FriendsRequests {
  id        String   @id @default(uuid())
  userId    String
  friendId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(name: "friends_requests_user", fields: [userId], references: [id])
  Friend    User     @relation(name: "friends_requests_friend", fields: [friendId], references: [id])
}

model VerificationForm {
  id        String   @id @default(uuid())
  userId    String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Moderator {
  id         String     @id @default(uuid())
  userId     String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  categories Category[]
  User       User       @relation(fields: [userId], references: [id])
  Course     Course[]
}

enum CourseItemType {
  photo
  text
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

enum Category {
  MATH
  SCIENCE
  HISTORY
  GEOGRAPHY
  ENGLISH
  ART
  MUSIC
  SPORTS
  OTHER
}
